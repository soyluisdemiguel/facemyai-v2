/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Billing as PrismaBilling } from "@prisma/client";

export class BillingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.BillingCountArgs, "select">): Promise<number> {
    return this.prisma.billing.count(args);
  }

  async billings(args: Prisma.BillingFindManyArgs): Promise<PrismaBilling[]> {
    return this.prisma.billing.findMany(args);
  }
  async billing(
    args: Prisma.BillingFindUniqueArgs
  ): Promise<PrismaBilling | null> {
    return this.prisma.billing.findUnique(args);
  }
  async createBilling(args: Prisma.BillingCreateArgs): Promise<PrismaBilling> {
    return this.prisma.billing.create(args);
  }
  async updateBilling(args: Prisma.BillingUpdateArgs): Promise<PrismaBilling> {
    return this.prisma.billing.update(args);
  }
  async deleteBilling(args: Prisma.BillingDeleteArgs): Promise<PrismaBilling> {
    return this.prisma.billing.delete(args);
  }
}
