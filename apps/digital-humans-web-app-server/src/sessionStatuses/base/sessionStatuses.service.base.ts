/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  SessionStatuses as PrismaSessionStatuses,
} from "@prisma/client";

export class SessionStatusesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SessionStatusesCountArgs, "select">
  ): Promise<number> {
    return this.prisma.sessionStatuses.count(args);
  }

  async sessionStatusesItems(
    args: Prisma.SessionStatusesFindManyArgs
  ): Promise<PrismaSessionStatuses[]> {
    return this.prisma.sessionStatuses.findMany(args);
  }
  async sessionStatuses(
    args: Prisma.SessionStatusesFindUniqueArgs
  ): Promise<PrismaSessionStatuses | null> {
    return this.prisma.sessionStatuses.findUnique(args);
  }
  async createSessionStatuses(
    args: Prisma.SessionStatusesCreateArgs
  ): Promise<PrismaSessionStatuses> {
    return this.prisma.sessionStatuses.create(args);
  }
  async updateSessionStatuses(
    args: Prisma.SessionStatusesUpdateArgs
  ): Promise<PrismaSessionStatuses> {
    return this.prisma.sessionStatuses.update(args);
  }
  async deleteSessionStatuses(
    args: Prisma.SessionStatusesDeleteArgs
  ): Promise<PrismaSessionStatuses> {
    return this.prisma.sessionStatuses.delete(args);
  }
}
